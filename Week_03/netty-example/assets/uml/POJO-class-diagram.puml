@startuml

package "org.example.pojo" {
    '  TimeDecoder class diagram
    ChannelHandler <|.. ChannelOutboundHandler
    ChannelOutboundHandler <|.. ChannelOutboundHandlerAdapter
    ChannelHandlerAdapter <|-- ChannelOutboundHandlerAdapter
    ChannelOutboundHandlerAdapter <|-- MessageToByteEncoder
    MessageToByteEncoder <|-- TimeEncoder

    interface ChannelOutboundHandler {
        void bind(ChannelHandlerContext, SocketAddress, ChannelPromise)
        void connect(ChannelHandlerContext, SocketAddress, SocketAddress, ChannelPromise)
        void disconnect(ChannelHandlerContext, ChannelPromise)
        void close(ChannelHandlerContext, ChannelPromise)
        void deregister(ChannelHandlerContext, ChannelPromise)
        void read(ChannelHandlerContext)
        void write(ChannelHandlerContext, Object, ChannelPromise)
        void flush(ChannelHandlerContext)
    }
    class ChannelOutboundHandlerAdapter { }
    abstract class MessageToByteEncoder<I> {
        - final TypeParameterMatcher matcher
        - final boolean preferDirect
    	+ void write(ChannelHandlerContext ctx, Object msg, ChannelPromise promise)
    	# {abstract} void encode(ChannelHandlerContext ctx, I msg, ByteBuf out)
    }
    note right of MessageToByteEncoder: <b>write</b> invokes <b>encode</b>

    class TimeEncoder<UnixTime> {
        # void encode(ChannelHandlerContext ctx, UnixTime msg, ByteBuf out) throws Exception
    }

    '  TimeDecoder class diagram
    ChannelHandler <|.. ChannelInboundHandler
    ChannelHandler <|.. ChannelHandlerAdapter
    ChannelInboundHandler <|.. ChannelInboundHandlerAdapter
    ChannelHandlerAdapter <|-- ChannelInboundHandlerAdapter
    ChannelInboundHandlerAdapter <|-- ByteToMessageDecoder
    ByteToMessageDecoder <|-- TimeDecoder

    interface ChannelHandler {
         void handlerAdded(ChannelHandlerContext)
         void handlerRemoved(ChannelHandlerContext)
    }

    abstract class ChannelHandlerAdapter {
        boolean added

        + void handlerAdded(ChannelHandlerContext)
        + void handlerRemoved(ChannelHandlerContext)
    }

    interface ChannelInboundHandler {
        void channelRegistered(ChannelHandlerContext)
        void channelUnregistered(ChannelHandlerContext)
        void channelActive(ChannelHandlerContext)
        void channelInactive(ChannelHandlerContext)
        void channelRead(ChannelHandlerContext, Object)
        void channelReadComplete(ChannelHandlerContext)
        void userEventTriggered(ChannelHandlerContext, Object)
        void channelWritabilityChanged(ChannelHandlerContext)
        void exceptionCaught(ChannelHandlerContext, Throwable)
    }

    class ChannelInboundHandlerAdapter { }

    abstract class ByteToMessageDecoder {
        + void channelRead(ChannelHandlerContext ctx, Object msg)
        + void channelReadComplete(ChannelHandlerContext ctx)
        # void decode(ChannelHandlerContext ctx, ByteBuf in, List<Object> out)
    }
    note right of ByteToMessageDecoder : <b>channelRead</b> invokes <b>decode</b>

    class TimeDecoder {
        # void decode(ChannelHandlerContext ctx, ByteBuf in, List<Object> out)
    }


    ' UnixTime
    TimeEncoder o-left-"1" UnixTime
    TimeDecoder o-right-"1" UnixTime

    class UnixTime {
        - final long value
        + long value()
        + String toString()
    }
}

@enduml