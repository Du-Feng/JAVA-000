@startuml
Client -> OrderFrameDecoder: send request to server
OrderFrameDecoder -> OrderFrameDecoder: channelRead
OrderFrameDecoder -> OrderFrameDecoder: decode
OrderFrameDecoder -> OrderFrameDecoder: channelReadComplete
OrderFrameDecoder -> OrderFrameEncoder: request
OrderFrameEncoder -> OrderProtocolDecoder: pass request
OrderProtocolDecoder -> OrderProtocolDecoder: channelRead
OrderProtocolDecoder -> OrderProtocolDecoder: decode
OrderProtocolDecoder -> OrderProtocolDecoder: channelReadComplete
OrderProtocolDecoder -> OrderProtocolEncoder: request
OrderProtocolEncoder -> LoggingHandler: pass request
LoggingHandler -> LoggingHandler: channelRead
LoggingHandler -> LoggingHandler: channelReadComplete
LoggingHandler -> OrderServerProcessHandler: request

OrderServerProcessHandler -> OrderServerProcessHandler: channelRead
note right of OrderServerProcessHandler: <b>channelRead</b> invokes <b>writeAndFlush(responseMessage)</b>

OrderServerProcessHandler --> LoggingHandler: response
LoggingHandler --> LoggingHandler: write
LoggingHandler --> LoggingHandler: flush
LoggingHandler --> OrderProtocolEncoder: response
OrderProtocolEncoder --> OrderProtocolEncoder: write
OrderProtocolEncoder --> OrderProtocolEncoder: encode
OrderProtocolEncoder --> OrderProtocolEncoder: flush
OrderProtocolEncoder --> OrderProtocolDecoder: response
OrderProtocolDecoder --> OrderFrameEncoder: pass response
OrderFrameEncoder --> OrderFrameEncoder: write
OrderFrameEncoder --> OrderFrameEncoder: encode
OrderFrameEncoder --> OrderFrameEncoder: flush
OrderFrameEncoder --> OrderFrameDecoder: response
OrderFrameDecoder --> Client: send response to client

box Server
participant OrderFrameDecoder
participant OrderFrameEncoder
participant OrderProtocolDecoder
participant OrderProtocolEncoder
participant LoggingHandler
participant OrderServerProcessHandler
end box

@enduml